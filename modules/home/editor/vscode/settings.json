{
  // settings.json for VSCode. This is provisioned directly by
  // home-manager instead of using Nix to manage it, in order to
  // make the syntax the same as the normal settings.json file.

  // ======
  //  Core
  // ======

  "terminal.external.linuxExec": "kgx", // The default code looks for isn't installed, and fails silently
  "telemetry.telemetryLevel": "off", // Don't send telemetry data to Microsoft
  "redhat.telemetry.enabled": false, // I'm installing this automatically, so technically I never consented and enabling by default is a GDPR violation

  // VSCode and extensions are managed by Nix, so don't auto-update or even check for updates
  "extensions.autoCheckUpdates": false,
  "extensions.autoUpdate": false,
  "update.mode": "none",

  // Hide message when opening a new window
  "extensions.ignoreRecommendations": true,

  "files.insertFinalNewline": true, // Makes some tools happier
  "files.trimTrailingWhitespace": true, // Trailing whitespace is bad practice

  "git.autofetch": true, // Keep the repo up to date, but don't pull unless I say so
  "git.confirmSync": false, // Don't tell me what pushing does, I know what I'm doing
  "git.openRepositoryInParentFolders": "always", // Open a repo if there's one in a parent folder

  // Associate some files with the correct language to make them look nice
  "files.associations": {
    "flake.lock": "json" // Nix flakes
  },

  "files.exclude": {
    "**/__pycache__": true // Hide Python cache folders
  },

  "editor.fontFamily": "'DejaVuSansM Nerd Font Mono', 'monospace'", // Nice font with icons to be extra fancy
  "editor.showFoldingControls": "always", // Always show folding controls, so it's clear what's foldable
  "editor.renderWhitespace": "trailing", // Highlight if there's trailing whitespace

  "editor.suggest.matchOnWordStartOnly": false, // Allow searching for words in the middle, without needing to know the start
  "editor.wordBasedSuggestions": "off", // Don't clutter suggestions with every word in the document

  // Keep most lines under 80 characters, and consider refactoring if exceeding
  // 120.
  "editor.rulers": [
    80,
    120
  ],

  // =================
  //  Core Extensions
  // =================

  // The default limits are a bit low for large files, so increase them to be practically unlimited
  "cSpell.maxNumberOfProblems": 99999,
  "cSpell.checkLimit": 99999,
  "cSpell.language": "en-GB", // American English is simplified English

  "todo-tree.tree.expanded": true,
  "todo-tree.tree.showCountsInTree": true,
  "todo-tree.general.tags": [
    "BUG",
    "HACK",
    "FIXME",
    "TODO",
    "XXX",
    "[ ]"
    // "[x]" // Disable this as it represents a completed task.
  ],

  // =====
  //  C++
  // =====
  // This is C++, using software developed by Microsoft. Microsoft doesn't use C++ very well, so we're in for a ride
  // of insane defaults, poor design, and the downright weird. For fun, I've marked the terrible defaults with WTF.
  "cmake.showOptionsMovedNotification": false, // WTF: I didn't even use the extension before this was added, why would I care?
  "cmake.pinnedCommands": [
    "workbench.action.tasks.configureTaskRunner",
    "workbench.action.tasks.runTask"
  ], // WTF: The extension is aggressive about setting its defaults, and overwrites an explicit empty array
  "cmake.configureOnOpen": false, // WTF: I don't want you to touch anyting when I open a file
  "cmake.configureOnEdit": false, // Finally something that isn't WTF, I still don't want it
  "C_Cpp.autoAddFileAssociations": false, // WTF: Don't mess with my files, why are you even looking at them?
  "cmake.showConfigureWithDebuggerNotification": false, // WTF: If I wanted a debugger I would search for one

  // =====
  //  Nix
  // =====
  "nix.enableLanguageServer": true,
  // TODO: Consider switching to nixd
  "nix.serverPath": "nil",
  "nix.serverSettings": {
    "nil": {
      "formatting": {
        // Use whatever the workspace has set for nix files
        "command": ["nix", "fmt", "--", "--stdin", ".nix"]
      }
    }
  },
  "nix.formatterPath": "nix fmt -- --stdin dummy.nix",

  // ========
  //  Python
  // ========
  "python.analysis.diagnosticMode": "workspace", // Check the whole project, not just open files
  "python.analysis.typeCheckingMode": "strict", // Be strict about type checking, good for catching bugs
  "python.analysis.inlayHints.functionReturnTypes": true, // Show return types in function signatures, useful for understanding code
  "python.analysis.diagnosticSeverityOverrides": {
    // Configure Pylance to be stricter than usual
    "reportUnusedClass": "warning",
    "reportUnusedExpression": "warning",
    "reportUnusedFunction": "warning",
    "reportUnusedVariable": "warning",

    "reportUnknownArgumentType": "information",
    "reportUnknownLambdaType": "information",
    "reportUnknownMemberType": "information",
    "reportUnknownParameterType": "information",
    "reportUnknownVariableType": "information"
  }
}
