{
  // Place your snippets for nix here. Each snippet is defined under a snippet name and has a prefix, body and
  // description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the
  // same ids are connected.
  // Example:
  // "Print to console": {
  // 	"prefix": "log",
  // 	"body": [
  // 		"console.log('$1');",
  // 		"$2"
  // 	],
  // 	"description": "Log output to console"
  // }
  "Optional Module": {
    "prefix": "module",
    "body": [
      "{",
      "  config,",
      "  lib,",
      "  pkgs,",
      "  ...",
      "}: {",
      "  options.custom.$1 = let",
      "    inherit (lib) mkOption mkEnableOption types;",
      "  in {",
      "    enable = mkEnableOption \"$2\";",
      "  };",
      "",
      "  config = let",
      "    cfg = config.custom.$1;",
      "  in lib.mkIf cfg.enable {",
      "    $3",
      "  };",
      "}"
    ]
  }
}
