{
  // Place your snippets for shellscript here. Each snippet is defined under a snippet name and has a prefix, body and
  // description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the
  // same ids are connected.
  // Example:
  // "Print to console": {
  // 	"prefix": "log",
  // 	"body": [
  // 		"console.log('$1');",
  // 		"$2"
  // 	],
  // 	"description": "Log output to console"
  // }
  "Bash Script": {
    "prefix": "bash",
    "body": [
      "#!/usr/bin/env bash",
      "set -euo pipefail",
      "",
      "showhelp() {",
      "  cat <<EOF",
      "Usage: \\$0 $1",
      "  -h|--help:",
      "    Show this help message and exit",
      "EOF",
      "  exit",
      "}",
      "",
      "while [[ $# -gt 0 ]]; do",
      "  case \\$1 in",
      "    -h|--help)",
      "      showhelp",
      "      ;;",
      "    *)",
      "      echo \"Unknown argument: \\$1\" >&2",
      "      exit 1",
      "      ;;",
      "  esac",
      "  shift",
      "done"
    ]
  },

  "To Lower Case": {
    "prefix": "lower",
    "body": "tr '[:upper:]' '[:lower:]'"
  },
  "To Upper Case": {
    "prefix": "upper",
    "body": "tr '[:lower:]' '[:upper:]'"
  },

  "For Each File": {
    "prefix": "foreachfile",
    "body": [
      "while IFS= read -r -d '' file; do",
      "  $3",
      "done < <(find \"$1\" ${2:-type f} -print0)"
    ]
  },

  "Is Variable Unset": {
    "prefix": "ifunset",
    "body": [
      "if [[ -z \"\\$$1\" ]]; then",
      "  $2",
      "fi"
    ]
  }
}
