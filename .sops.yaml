# To add a new key from your SSH key:
# 1. Generate a private key
# Run `ssh-to-age -private-key -i ~/.ssh/id_ed25519 -o ~/.config/sops/age/keys.txt`
# 2. Generate a public key
# Run `ssh-to-age -i ~/.ssh/id_ed25519.pub`
# 3. Add the public key to the list of keys and appropriate creation rules
# This should be in the format of `&<hostname> <public key>`, which will start with `age1`
# DO NOT allow the private key to leave your machine
#
# To encrypt an existing file for a new key:
# Run `sops updatekeys <path to file>`
# This must run on a machine that already has access to the file
# When assigning key groups, be sure to follow the principle of least privilege
# That is, machine-specific secrets should only be accessible by that machine
# User-specific secrets should only be accessible by that user
# (if I had machines with multiple users, I would use different keys for the user and machine)
keys:
  # Public keys, generated from SSH keys
  # The matching private keys are stored at ~/.config/sops/age/keys.txt, outside of anything that may be shared
  - &canterbury age18klvxktm23sxs8fa8xts3kzzp8rwh9x037e98ym3sj2yuquqqs6sj3wy76
  - &rocinante age1ghp0654a5yrzgmyspanyvgp5lmz8tn4yqxjaa57kgejc8uuwh9fqnelusr
  - &tycho age1t2kus55sfxplneeatj6dkfedp0jqmucv7y48hx23l9l0gqfny9kskslh3w
creation_rules:
  # Hosts - Secrets should only be accessible by the machine they are for
  - path_regex: hosts/canterbury/secrets.yaml$
    key_groups:
      - age:
          - *canterbury
  - path_regex: hosts/rocinante/secrets.yaml$
    key_groups:
      - age:
          - *rocinante
  - path_regex: hosts/tycho/secrets.yaml$
    key_groups:
      - age:
          - *tycho
  # Users - Secrets should be accessible on any of the user's machines
  - path_regex: users/kieran/secrets.yaml$
    key_groups:
      - age:
          - *canterbury
          - *rocinante
          # Doesn't need to know my desktop secrets
          # - *tycho
